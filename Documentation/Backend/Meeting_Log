14-03-2021:

Objectives of meeting :
-> Start thinking about the construction of our static DB
-> Start with ER model - list attributes, relationships etc
-> Construct list of sources
-> Think about how to integrate with API? -> store as CSV, use SQL?

Made basic ER Diagram for backend work.
Consolidate with front end members to where we can incorporate images via a Fake News link.
As another team-member to check the ER diagram, probably via a pull request.
Made decisions regarding dependencies and uses of articles in terms of quiz questions.
Ambiguity regarding News items having multiple News topics
	-Would be good to utilise news info to declare a topic
	-and then tell the user what topic the news item is regarding

For next session:
	-review notes on normalisation
	-check it conforms to BCNF (for writing tables)

---------------------------------------------

17-03-21:

Objectives of meeting:
-> check DB structure conforms to BCNF
-> start creating directory structure and input examples
-> decide on coherent list of datasets we will use
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::												:::
::: WHEN CREATING EXAMPLE .CSV FILE TO TEST ER DIAGRAM:						:::
:::												:::
:::-Realised that News_Item table would only be used to ask a Quiz Question			:::
:::-Therefore having a Quiz Question table is redundant.					:::
:::-Due to the 1 to 1 relationship between News Item and Quiz Question.				:::
:::--Solution: merge Quiz Question and News_Item						:::
:::												:::
:::-Even though in our original model, each question was going to be based on one news topic.	:::
:::-If we can, we would implement multiple news topics per question				:::
:::-Therefore we have left 'News Topic' as a separate table.					:::
:::												:::
:::-Researched about join tables, realised they don't necessarily need a PK			:::
:::-Removed PK from join table Topic_Library for clarity and ease of use.			:::
:::												:::
:::-Considered when we would store user follow up input						:::
:::-i.e when user is incorrect *then* they will be prompted with a follow up qu.		:::
:::-Need to consult with team (See 'for next session')						:::
:::												:::
:::												:::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

-Updated ERDiagram considering changes made from .csv example
-Checked for normalisation in the backend layout (See '../DatabaseDesign/Normalisation_RunThrough.txt').
-Slight confusion between Composite/Non-composite candidate keys in terms of violating BCNF 2.
	-> checked notes and David's powerpoints to iron out this issue. (BCNF2 O.K now).

For next session:
	- add actual data to directory/mongoDB
	- consult with team when to program user follow-up questions 
	- hard to explain but 'is the follow up going to be triggered from the backend or the frontend.'
	- choose datasets and start filling in databses
		-> may have to change backend structure depending on dataset found

31/03/2021:

	Backend meeting VG & NT.

-Discussion after completing MongoDB workbook on SEGP Github.
-We originally developed our database/schema to be used in a full SQL environment.
-Took the time to discuss and research the differences between SQL and NoSQL databases (As MongoDB is a NoSQL service).
-We initially believed that an SQL database would suit us better as we had a pre-defined and long-standing layout for our data that we were not planning on changing.
-However (in short), we decided to persue a NoSQL database as it would be easier to implement new features if we had the time at the end of the core development.
-The flexibility and scalability that NoSQL has over SQL is much more useful for us as we have narrowed our developmental ideas for the project in order to maximise our applications performance.


                          $$$$$$$$$$$$$$$$$$$$
                       $$$$$$$$$$$$$$$$$$$$$$$$$$$
                    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$         $$   $$$$$
    $$$$$$        $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$       $$$$$$$$$$
 $$ $$$$$$      $$$$$$$$$$    $$$$$$$$$$$$$    $$$$$$$$$$       $$$$$$$$
 $$$$$$$$$     $$$$$$$$$$      $$$$$$$$$$$      $$$$$$$$$$$    $$$$$$$$
   $$$$$$$    $$$$$$$$$$$      $$$$$$$$$$$      $$$$$$$$$$$$$$$$$$$$$$$
   $$$$$$$$$$$$$$$$$$$$$$$    $$$$$$$$$$$$$    $$$$$$$$$$$$$$  $$$$$$
    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$     $$$$
     $$$   $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$     $$$$$
    $$$$   $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$       $$$$
    $$$    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ $$$$$$$$$$$$$$$$$
   $$$$$$$$$$$$$  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$   $$$$$$$$$$$$$$$$$$
   $$$$$$$$$$$$$   $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$     $$$$$$$$$$$$
  $$$$       $$$$    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$      $$$$
             $$$$$     $$$$$$$$$$$$$$$$$$$$$$$$$         $$$
               $$$$          $$$$$$$$$$$$$$$           $$$$
                $$$$$                                $$$$$
                 $$$$$$      $$$$$$$$$$$$$$        $$$$$
                   $$$$$$$$     $$$$$$$$$$$$$   $$$$$$$
                      $$$$$$$$$$$  $$$$$$$$$$$$$$$$$
                         $$$$$$$$$$$$$$$$$$$$$$
                                 $$$$$$$$$$$$$$$
                                     $$$$$$$$$$$$
                                      $$$$$$$$$$$
                  			$$$$$$$$
